{"version":3,"file":"static/js/884.6a7cd18d.chunk.js","mappings":"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","sources":["helpers/api.js","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst API_KEY = 'db647ca802bc56bfe4b5510b06bf37f2';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nasync function getTrendingMovies() {\n  const response = await axios\n    .get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`)\n    .catch(function (error) {\n      if (error.response) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else if (error.request) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      }\n    });\n\n  return response;\n}\n\nasync function getMovieDetails(id) {\n  const response = await axios\n    .get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`)\n    .catch(function (error) {\n      if (error.response) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else if (error.request) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      }\n    });\n\n  return response;\n}\n\nasync function getSearchMovies(query) {\n  const response = await axios\n    .get(`${BASE_URL}search/movie?query=${query}&api_key=${API_KEY}`)\n    .catch(function (error) {\n      if (error.response) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else if (error.request) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      }\n    });\n\n  return response;\n}\n\nasync function getMovieCredits(id) {\n  const response = await axios\n    .get(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`)\n    .catch(function (error) {\n      if (error.response) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else if (error.request) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      }\n    });\n\n  return response;\n}\n\nasync function getMovieReviews(id) {\n  const response = await axios\n    .get(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`)\n    .catch(function (error) {\n      if (error.response) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else if (error.request) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      }\n    });\n\n  return response;\n}\n\nexport {\n  getTrendingMovies,\n  getMovieDetails,\n  getSearchMovies,\n  getMovieCredits,\n  getMovieReviews,\n};\n","import { getMovieDetails } from 'helpers/api';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, useParams, useLocation, Outlet } from 'react-router-dom';\n\nexport default function MovieDetails() {\n  const { movieID } = useParams();\n\n  const [title, setTitle] = useState('');\n  const [image, setImage] = useState('');\n  const [releaseYear, setReleaseYear] = useState();\n  const [score, setScore] = useState();\n  const [overview, setOverview] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [isMovieDataLoading, setIsMovieDataLoading] = useState(false);\n\n  const location = useLocation();\n  const linkToGoBack = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    setIsMovieDataLoading(true);\n    getMovieDetails(movieID)\n      .then(resp => {\n        const result = resp.data;\n        console.log(resp);\n        setTitle(result.title);\n        setImage(result.poster_path);\n        setReleaseYear(new Date(result.release_date).getFullYear());\n        setScore(Math.round(result.vote_average * 10));\n        setOverview(result.overview);\n\n        result.genres.map(({ name }) =>\n          setGenres(prevName => [...prevName, name])\n        );\n      })\n      .finally(() => {\n        setIsMovieDataLoading(false);\n      });\n  }, [movieID]);\n\n  return (\n    <>\n      <Link to={linkToGoBack.current}>Go back</Link>\n\n      {isMovieDataLoading ? (\n        <div>Movie Data Loading...</div>\n      ) : (\n        <>\n          <h2>\n            {title} ({releaseYear})\n          </h2>\n          <img\n            src={`https://image.tmdb.org/t/p/w200/${image}`}\n            alt=\"\"\n            width=\"200px\"\n            height=\"300px\"\n          />\n          <p> User Score: {score}%</p>\n          <h3>Overview </h3>\n          <p>{overview}</p>\n          <h4>Genres</h4>\n          <p>{genres.join(', ')}</p>\n        </>\n      )}\n\n      <hr />\n      <p>Additional information</p>\n      <Link to=\"cast\">Cast</Link>\n      <br />\n      <Link to=\"reviews\">Reviews</Link>\n\n      <Suspense fallback={<div>LOADING...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n"],"names":["API_KEY","BASE_URL","getTrendingMovies","axios","catch","error","response","request","toast","getMovieDetails","id","getSearchMovies","query","getMovieCredits","getMovieReviews","MovieDetails","movieID","useParams","useState","title","setTitle","image","setImage","releaseYear","setReleaseYear","score","setScore","overview","setOverview","genres","setGenres","isMovieDataLoading","setIsMovieDataLoading","location","useLocation","linkToGoBack","useRef","state","from","useEffect","then","resp","result","data","console","log","poster_path","Date","release_date","getFullYear","Math","round","vote_average","map","name","prevName","finally","to","current","src","alt","width","height","join","Suspense","fallback"],"sourceRoot":""}