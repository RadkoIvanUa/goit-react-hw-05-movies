{"version":3,"file":"static/js/134.353d29a7.chunk.js","mappings":"wTAGMA,EAAU,mCACVC,EAAW,gCAAjB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,oGACyBC,EAAAA,EAAAA,IAAA,UACbF,EADa,sCACyBD,IAC7CI,OAAM,SAAUC,GACXA,EAAMC,UAICD,EAAME,QAHfC,EAAAA,GAAAA,MACE,oEAWL,IAjBL,cACQF,EADR,yBAmBSA,GAnBT,2EAsBeG,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BC,GAA/B,uFACyBP,EAAAA,EAAAA,IAAA,UACbF,EADa,iBACIS,EADJ,oBACkBV,IACtCI,OAAM,SAAUC,GACXA,EAAMC,UAICD,EAAME,QAHfC,EAAAA,GAAAA,MACE,oEAWL,IAjBL,cACQF,EADR,yBAmBSA,GAnBT,2EAsBeK,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BC,GAA/B,uFACyBT,EAAAA,EAAAA,IAAA,UACbF,EADa,8BACiBW,EADjB,oBACkCZ,IACtDI,OAAM,SAAUC,GACXA,EAAMC,UAICD,EAAME,QAHfC,EAAAA,GAAAA,MACE,oEAWL,IAjBL,cACQF,EADR,yBAmBSA,GAnBT,2EAsBeO,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BH,GAA/B,uFACyBP,EAAAA,EAAAA,IAAA,UACbF,EADa,iBACIS,EADJ,4BAC0BV,IAC9CI,OAAM,SAAUC,GACXA,EAAMC,UAICD,EAAME,QAHfC,EAAAA,GAAAA,MACE,oEAWL,IAjBL,cACQF,EADR,yBAmBSA,GAnBT,2EAsBeQ,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BJ,GAA/B,uFACyBP,EAAAA,EAAAA,IAAA,UACbF,EADa,iBACIS,EADJ,4BAC0BV,IAC9CI,OAAM,SAAUC,GACXA,EAAMC,UAICD,EAAME,QAHfC,EAAAA,GAAAA,MACE,oEAWL,IAjBL,cACQF,EADR,yBAmBSA,GAnBT,kE,4HC1FMS,GAAaC,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IAClBC,GAAaD,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IAET,SAASE,IACtB,OAAkDC,EAAAA,EAAAA,UAAS,IAA3D,eAAOC,EAAP,KAA0BC,EAA1B,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAsBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMb,EAAQW,EAAaG,IAAI,SAC1Bd,IAGLD,EAAAA,EAAAA,IAAgBC,GAAOe,MAAK,SAAAC,GAC1B,IAAMC,EAASD,EAAKE,KAAKC,QACzB,GAAsB,IAAlBF,EAAOG,OAKX,OAAOX,GAAqB,OAAIQ,IAJ9BI,MAAM,UAKT,GACF,GAAE,CAACV,KAGF,iCACE,SAACN,EAAD,CAAYiB,SAtBM,SAAAC,GACpBX,EAAgB,CAAEZ,MAAOuB,GAC1B,KAqBG,SAACpB,EAAD,CAAYqB,UAAWhB,MAG5B,C","sources":["helpers/api.js","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst API_KEY = 'db647ca802bc56bfe4b5510b06bf37f2';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nasync function getTrendingMovies() {\n  const response = await axios\n    .get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`)\n    .catch(function (error) {\n      if (error.response) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else if (error.request) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      }\n    });\n\n  return response;\n}\n\nasync function getMovieDetails(id) {\n  const response = await axios\n    .get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`)\n    .catch(function (error) {\n      if (error.response) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else if (error.request) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      }\n    });\n\n  return response;\n}\n\nasync function getSearchMovies(query) {\n  const response = await axios\n    .get(`${BASE_URL}search/movie?query=${query}&api_key=${API_KEY}`)\n    .catch(function (error) {\n      if (error.response) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else if (error.request) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      }\n    });\n\n  return response;\n}\n\nasync function getMovieCredits(id) {\n  const response = await axios\n    .get(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`)\n    .catch(function (error) {\n      if (error.response) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else if (error.request) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      }\n    });\n\n  return response;\n}\n\nasync function getMovieReviews(id) {\n  const response = await axios\n    .get(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`)\n    .catch(function (error) {\n      if (error.response) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else if (error.request) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      }\n    });\n\n  return response;\n}\n\nexport {\n  getTrendingMovies,\n  getMovieDetails,\n  getSearchMovies,\n  getMovieCredits,\n  getMovieReviews,\n};\n","import { useState, useEffect, lazy } from 'react';\nimport { getSearchMovies } from 'helpers/api';\nimport { useSearchParams } from 'react-router-dom';\n\nconst MoviesList = lazy(() => import('../components/movies-list/MoviesList'));\nconst SearchForm = lazy(() => import('../components/search-form/SearchForm'));\n\nexport default function Movies() {\n  const [searchedMoviesArr, setSearchedMoviesArr] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const heandleSubmit = searchOuery => {\n    setSearchParams({ query: searchOuery });\n  };\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (!query) {\n      return;\n    }\n    getSearchMovies(query).then(resp => {\n      const result = resp.data.results;\n      if (result.length === 0) {\n        alert('NO MACH');\n        return;\n      }\n\n      return setSearchedMoviesArr([...result]);\n    });\n  }, [searchParams]);\n\n  return (\n    <>\n      <SearchForm onSubmit={heandleSubmit} />\n      <MoviesList moviesArr={searchedMoviesArr} />\n    </>\n  );\n}\n"],"names":["API_KEY","BASE_URL","getTrendingMovies","axios","catch","error","response","request","toast","getMovieDetails","id","getSearchMovies","query","getMovieCredits","getMovieReviews","MoviesList","lazy","SearchForm","Movies","useState","searchedMoviesArr","setSearchedMoviesArr","useSearchParams","searchParams","setSearchParams","useEffect","get","then","resp","result","data","results","length","alert","onSubmit","searchOuery","moviesArr"],"sourceRoot":""}