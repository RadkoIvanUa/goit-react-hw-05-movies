{"version":3,"file":"static/js/390.76414eaf.chunk.js","mappings":"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","sources":["components/cast/Cast.jsx","helpers/api.js"],"sourcesContent":["import { getMovieCredits } from 'helpers/api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\n\nexport default function Cast() {\n  const { movieID } = useParams();\n\n  const [castArr, setCastArr] = useState([]);\n  const [isHaveCastInfo, setIsHaveCastInfo] = useState(true);\n\n  useEffect(() => {\n    getMovieCredits(movieID).then(resp => {\n      if (resp.data.cast.length === 0) {\n        setIsHaveCastInfo(false);\n        toast.info('We don`t have any info about cast of this movie');\n        return;\n      }\n      setCastArr([...resp.data.cast]);\n    });\n  }, [movieID]);\n\n  return isHaveCastInfo ? (\n    <ul>\n      {castArr.map(({ profile_path, name, character, id }) => (\n        <li key={id}>\n          {profile_path ? (\n            <img\n              src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n              alt=\"Actor\"\n              width=\"200px\"\n              height=\"300px\"\n            />\n          ) : (\n            <img\n              src=\"https://i.imgur.com/JQ8ngUd.png\"\n              alt=\"Actor\"\n              width=\"200px\"\n              height=\"300px\"\n            />\n          )}\n\n          <p>{name}</p>\n          <p>{character}</p>\n        </li>\n      ))}\n    </ul>\n  ) : (\n    <ToastContainer />\n  );\n}\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst API_KEY = 'db647ca802bc56bfe4b5510b06bf37f2';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nasync function getTrendingMovies() {\n  const response = await axios\n    .get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`)\n    .catch(function (error) {\n      if (error.response) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else if (error.request) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      }\n    });\n\n  return response;\n}\n\nasync function getMovieDetails(id) {\n  const response = await axios\n    .get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`)\n    .catch(function (error) {\n      if (error.response) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else if (error.request) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      }\n    });\n\n  return response;\n}\n\nasync function getSearchMovies(query) {\n  const response = await axios\n    .get(`${BASE_URL}search/movie?query=${query}&api_key=${API_KEY}`)\n    .catch(function (error) {\n      if (error.response) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else if (error.request) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      }\n    });\n\n  return response;\n}\n\nasync function getMovieCredits(id) {\n  const response = await axios\n    .get(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`)\n    .catch(function (error) {\n      if (error.response) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else if (error.request) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      }\n    });\n\n  return response;\n}\n\nasync function getMovieReviews(id) {\n  const response = await axios\n    .get(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`)\n    .catch(function (error) {\n      if (error.response) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else if (error.request) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      }\n    });\n\n  return response;\n}\n\nexport {\n  getTrendingMovies,\n  getMovieDetails,\n  getSearchMovies,\n  getMovieCredits,\n  getMovieReviews,\n};\n"],"names":["Cast","movieID","useParams","useState","castArr","setCastArr","isHaveCastInfo","setIsHaveCastInfo","useEffect","getMovieCredits","then","resp","data","cast","length","toast","map","profile_path","name","character","id","src","alt","width","height","API_KEY","BASE_URL","getTrendingMovies","axios","catch","error","response","request","getMovieDetails","getSearchMovies","query","getMovieReviews"],"sourceRoot":""}