{"version":3,"file":"static/js/23.37207ae5.chunk.js","mappings":"2OAIe,SAASA,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAoCE,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAUA,OARAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBN,GAASO,MAAK,SAAAC,GACK,IAA7BA,EAAKC,KAAKC,QAAQC,SACtBC,QAAQC,IAAIL,GACZJ,GAAc,OAAII,EAAKC,KAAKC,UAC7B,GACF,GAAE,CAACV,IAEyB,IAAtBG,EAAWW,QAChB,wBACGX,EAAWY,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACd,2BACE,qCAAaF,MACb,uBAAIC,MAFGC,EADK,OAQlB,mEAEH,C,wMCzBKC,EAAU,mCACVC,EAAW,gCAAjB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,oGACyBC,EAAAA,EAAAA,IAAA,UACbF,EADa,sCACyBD,IAC7CI,OAAM,SAAUC,GACXA,EAAMC,UAICD,EAAME,QAHfC,EAAAA,GAAAA,MACE,oEAWL,IAjBL,cACQF,EADR,yBAmBSA,GAnBT,2EAsBeG,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BV,GAA/B,uFACyBI,EAAAA,EAAAA,IAAA,UACbF,EADa,iBACIF,EADJ,oBACkBC,IACtCI,OAAM,SAAUC,GACXA,EAAMC,UAICD,EAAME,QAHfC,EAAAA,GAAAA,MACE,oEAWL,IAjBL,cACQF,EADR,yBAmBSA,GAnBT,2EAsBeI,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BC,GAA/B,uFACyBR,EAAAA,EAAAA,IAAA,UACbF,EADa,8BACiBU,EADjB,oBACkCX,IACtDI,OAAM,SAAUC,GACXA,EAAMC,UAICD,EAAME,QAHfC,EAAAA,GAAAA,MACE,oEAWL,IAjBL,cACQF,EADR,yBAmBSA,GAnBT,2EAsBeM,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+Bb,GAA/B,uFACyBI,EAAAA,EAAAA,IAAA,UACbF,EADa,iBACIF,EADJ,4BAC0BC,IAC9CI,OAAM,SAAUC,GACXA,EAAMC,UAICD,EAAME,QAHfC,EAAAA,GAAAA,MACE,oEAWL,IAjBL,cACQF,EADR,yBAmBSA,GAnBT,2EAsBenB,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BY,GAA/B,uFACyBI,EAAAA,EAAAA,IAAA,UACbF,EADa,iBACIF,EADJ,4BAC0BC,IAC9CI,OAAM,SAAUC,GACXA,EAAMC,UAICD,EAAME,QAHfC,EAAAA,GAAAA,MACE,oEAWL,IAjBL,cACQF,EADR,yBAmBSA,GAnBT,kE","sources":["components/reviews/Reviews.jsx","helpers/api.js"],"sourcesContent":["import { getMovieReviews } from 'helpers/api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport default function Reviews() {\n  const { movieID } = useParams();\n  const [reviewsArr, setReviewsArr] = useState([]);\n\n  useEffect(() => {\n    getMovieReviews(movieID).then(resp => {\n      if (resp.data.results.lengtn === 0) return;\n      console.log(resp);\n      setReviewsArr([...resp.data.results]);\n    });\n  }, [movieID]);\n\n  return reviewsArr.length !== 0 ? (\n    <ul>\n      {reviewsArr.map(({ author, content, id }) => (\n        <li key={id}>\n          <h4>Author: {author}</h4>\n          <p>{content}</p>\n        </li>\n      ))}\n    </ul>\n  ) : (\n    <p>We don`t have any reviews for this movie</p>\n  );\n}\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst API_KEY = 'db647ca802bc56bfe4b5510b06bf37f2';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nasync function getTrendingMovies() {\n  const response = await axios\n    .get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`)\n    .catch(function (error) {\n      if (error.response) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else if (error.request) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      }\n    });\n\n  return response;\n}\n\nasync function getMovieDetails(id) {\n  const response = await axios\n    .get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`)\n    .catch(function (error) {\n      if (error.response) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else if (error.request) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      }\n    });\n\n  return response;\n}\n\nasync function getSearchMovies(query) {\n  const response = await axios\n    .get(`${BASE_URL}search/movie?query=${query}&api_key=${API_KEY}`)\n    .catch(function (error) {\n      if (error.response) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else if (error.request) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      }\n    });\n\n  return response;\n}\n\nasync function getMovieCredits(id) {\n  const response = await axios\n    .get(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`)\n    .catch(function (error) {\n      if (error.response) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else if (error.request) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      }\n    });\n\n  return response;\n}\n\nasync function getMovieReviews(id) {\n  const response = await axios\n    .get(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`)\n    .catch(function (error) {\n      if (error.response) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else if (error.request) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      }\n    });\n\n  return response;\n}\n\nexport {\n  getTrendingMovies,\n  getMovieDetails,\n  getSearchMovies,\n  getMovieCredits,\n  getMovieReviews,\n};\n"],"names":["Reviews","movieID","useParams","useState","reviewsArr","setReviewsArr","useEffect","getMovieReviews","then","resp","data","results","lengtn","console","log","length","map","author","content","id","API_KEY","BASE_URL","getTrendingMovies","axios","catch","error","response","request","toast","getMovieDetails","getSearchMovies","query","getMovieCredits"],"sourceRoot":""}