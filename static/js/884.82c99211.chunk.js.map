{"version":3,"file":"static/js/884.82c99211.chunk.js","mappings":"uQAKe,SAASA,IAAgB,IAAD,IAC7BC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAsCJ,EAAAA,EAAAA,YAAtC,eAAOK,EAAP,KAAoBC,EAApB,KACA,GAA0BN,EAAAA,EAAAA,YAA1B,eAAOO,EAAP,KAAcC,EAAd,KACA,GAAgCR,EAAAA,EAAAA,UAAS,IAAzC,eAAOS,EAAP,KAAiBC,EAAjB,KACA,GAA4BV,EAAAA,EAAAA,UAAS,IAArC,eAAOW,EAAP,KAAeC,EAAf,KACA,GAAoDZ,EAAAA,EAAAA,WAAS,GAA7D,eAAOa,EAAP,KAA2BC,EAA3B,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAsBpD,OApBAC,EAAAA,EAAAA,YAAU,WACRP,GAAsB,IACtBQ,EAAAA,EAAAA,IAAgBxB,GACbyB,MAAK,SAAAC,GACJ,IAAMC,EAASD,EAAKE,KACpBxB,EAASuB,EAAOxB,OAChBG,EAASqB,EAAOE,aAChBrB,EAAe,IAAIsB,KAAKH,EAAOI,cAAcC,eAC7CtB,EAASuB,KAAKC,MAA4B,GAAtBP,EAAOQ,eAC3BvB,EAAYe,EAAOhB,UAEnBgB,EAAOd,OAAOuB,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChBvB,GAAU,SAAAwB,GAAQ,wBAAQA,GAAR,CAAkBD,GAAlB,GADF,GAGnB,IACAE,SAAQ,WACPvB,GAAsB,EACvB,GACJ,GAAE,CAAChB,KAGF,iCACE,SAAC,KAAD,CAAMwC,GAAIrB,EAAasB,QAAvB,SAAgC,YAE/B1B,GACC,SAAC,KAAD,CACE2B,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,SACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,KAGX,iCACE,0BACG9C,EAAM,KAAGI,EAAY,QAExB,gBACE2C,IAAG,0CAAqC7C,GACxC8C,IAAI,GACJR,MAAM,QACND,OAAO,WAET,yBAAG,gBAAcjC,EAAM,QACvB,wBAAI,eACJ,uBAAIE,KACJ,wBAAI,YACJ,uBAAIE,EAAOuC,KAAK,YAIpB,mBACA,uBAAG,4BACH,SAAC,KAAD,CAAMZ,GAAG,OAAT,SAAgB,UAChB,mBACA,SAAC,KAAD,CAAMA,GAAG,UAAT,SAAmB,aAEnB,SAAC,EAAAa,SAAD,CACEC,UACE,SAAC,KAAD,CACEZ,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,SACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,IAVf,UAcE,SAAC,KAAD,QAIP,C","sources":["pages/MovieDetails.jsx"],"sourcesContent":["import { getMovieDetails } from 'helpers/api';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, useParams, useLocation, Outlet } from 'react-router-dom';\nimport { ThreeDots, Puff } from 'react-loader-spinner';\n\nexport default function MovieDetails() {\n  const { movieID } = useParams();\n\n  const [title, setTitle] = useState('');\n  const [image, setImage] = useState('');\n  const [releaseYear, setReleaseYear] = useState();\n  const [score, setScore] = useState();\n  const [overview, setOverview] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [isMovieDataLoading, setIsMovieDataLoading] = useState(false);\n\n  const location = useLocation();\n  const linkToGoBack = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    setIsMovieDataLoading(true);\n    getMovieDetails(movieID)\n      .then(resp => {\n        const result = resp.data;\n        setTitle(result.title);\n        setImage(result.poster_path);\n        setReleaseYear(new Date(result.release_date).getFullYear());\n        setScore(Math.round(result.vote_average * 10));\n        setOverview(result.overview);\n\n        result.genres.map(({ name }) =>\n          setGenres(prevName => [...prevName, name])\n        );\n      })\n      .finally(() => {\n        setIsMovieDataLoading(false);\n      });\n  }, [movieID]);\n\n  return (\n    <>\n      <Link to={linkToGoBack.current}>Go back</Link>\n\n      {isMovieDataLoading ? (\n        <Puff\n          height=\"80\"\n          width=\"80\"\n          radius=\"9\"\n          color=\"orange\"\n          ariaLabel=\"three-dots-loading\"\n          wrapperStyle={{}}\n          wrapperClassName=\"\"\n          visible={true}\n        />\n      ) : (\n        <>\n          <h2>\n            {title} ({releaseYear})\n          </h2>\n          <img\n            src={`https://image.tmdb.org/t/p/w200/${image}`}\n            alt=\"\"\n            width=\"200px\"\n            height=\"300px\"\n          />\n          <p> User Score: {score}%</p>\n          <h3>Overview </h3>\n          <p>{overview}</p>\n          <h4>Genres</h4>\n          <p>{genres.join(', ')}</p>\n        </>\n      )}\n\n      <hr />\n      <p>Additional information</p>\n      <Link to=\"cast\">Cast</Link>\n      <br />\n      <Link to=\"reviews\">Reviews</Link>\n\n      <Suspense\n        fallback={\n          <ThreeDots\n            height=\"80\"\n            width=\"80\"\n            radius=\"9\"\n            color=\"orange\"\n            ariaLabel=\"three-dots-loading\"\n            wrapperStyle={{}}\n            wrapperClassName=\"\"\n            visible={true}\n          />\n        }\n      >\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n"],"names":["MovieDetails","movieID","useParams","useState","title","setTitle","image","setImage","releaseYear","setReleaseYear","score","setScore","overview","setOverview","genres","setGenres","isMovieDataLoading","setIsMovieDataLoading","location","useLocation","linkToGoBack","useRef","state","from","useEffect","getMovieDetails","then","resp","result","data","poster_path","Date","release_date","getFullYear","Math","round","vote_average","map","name","prevName","finally","to","current","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","src","alt","join","Suspense","fallback"],"sourceRoot":""}