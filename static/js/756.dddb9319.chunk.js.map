{"version":3,"file":"static/js/756.dddb9319.chunk.js","mappings":"qRAEMA,EAAgBC,EAAAA,EAAAA,IAAH,wD,SCAJ,SAASC,EAAT,GAOX,IANFC,EAMC,EANDA,MACAC,EAKC,EALDA,YACAC,EAIC,EAJDA,MACAC,EAGC,EAHDA,MACAC,EAEC,EAFDA,SACAC,EACC,EADDA,OAEA,OACE,UAACR,EAAD,YACE,gBACES,IAAG,0CAAqCH,GACxCI,IAAI,GACJC,MAAM,QACNC,OAAO,WAET,4BACE,0BACGT,EAAM,KAAGC,EAAY,QAGxB,yBAAG,gBAAcC,EAAM,QACvB,wBAAI,eACJ,uBAAIE,KACJ,wBAAI,YACJ,uBAAIC,EAAOK,KAAK,aAIvB,CCjBD,IAAMC,GAAab,EAAAA,EAAAA,GAAOc,EAAAA,GAAPd,CAAH,k0CAyED,SAASe,IAAoB,IAAD,IACjCC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOhB,EAAP,KAAciB,EAAd,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOb,EAAP,KAAce,EAAd,KACA,GAAsCF,EAAAA,EAAAA,YAAtC,eAAOf,EAAP,KAAoBkB,EAApB,KACA,GAA0BH,EAAAA,EAAAA,YAA1B,eAAOd,EAAP,KAAckB,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOZ,EAAP,KAAiBiB,EAAjB,KACA,GAA4BL,EAAAA,EAAAA,UAAS,IAArC,eAAOX,EAAP,KAAeiB,EAAf,KACA,GAAoDN,EAAAA,EAAAA,WAAS,GAA7D,eAAOO,EAAP,KAA2BC,EAA3B,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAsBpD,OApBAC,EAAAA,EAAAA,YAAU,WACRP,GAAsB,IACtBQ,EAAAA,EAAAA,IAAgBlB,GACbmB,MAAK,SAAAC,GACJ,IAAMC,EAASD,EAAKE,KACpBnB,EAASkB,EAAOnC,OAChBkB,EAASiB,EAAOE,aAChBlB,EAAe,IAAImB,KAAKH,EAAOI,cAAcC,eAC7CpB,EAASqB,KAAKC,MAA4B,GAAtBP,EAAOQ,eAC3BtB,EAAYc,EAAO/B,UAEnB+B,EAAO9B,OAAOuC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChBvB,GAAU,SAAAwB,GAAQ,wBAAQA,GAAR,CAAkBD,GAAlB,GADF,GAGnB,IACAE,SAAQ,WACPvB,GAAsB,EACvB,GACJ,GAAE,CAACV,KAGF,iCACE,SAACH,EAAD,CAAYqC,GAAIrB,EAAasB,QAA7B,SAAsC,YAErC1B,GACC,SAAC,KAAD,CACEd,OAAO,KACPD,MAAM,KACN0C,OAAO,IACPC,MAAM,SACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,KAGX,SAACxD,EAAD,CACEC,MAAOA,EACPC,YAAaA,EACbC,MAAOA,EACPC,MAAOA,EACPC,SAAUA,EACVC,OAAQA,KAIZ,mBACA,uBAAG,4BACH,SAAC,KAAD,CAAM2C,GAAG,OAAT,SAAgB,UAChB,mBACA,SAAC,KAAD,CAAMA,GAAG,UAAT,SAAmB,aAEnB,SAAC,EAAAQ,SAAD,CACEC,UACE,SAAC,KAAD,CACEhD,OAAO,KACPD,MAAM,KACN0C,OAAO,IACPC,MAAM,SACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,IAVf,UAcE,SAAC,KAAD,QAIP,C","sources":["components/movie-details/StyledDetails.jsx","components/movie-details/Details.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nconst StyledDetails = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport { StyledDetails };\n","import { StyledDetails } from './StyledDetails';\n\nexport default function Details({\n  title,\n  releaseYear,\n  score,\n  image,\n  overview,\n  genres,\n}) {\n  return (\n    <StyledDetails>\n      <img\n        src={`https://image.tmdb.org/t/p/w200/${image}`}\n        alt=\"\"\n        width=\"200px\"\n        height=\"300px\"\n      />\n      <div>\n        <h2>\n          {title} ({releaseYear})\n        </h2>\n\n        <p> User Score: {score}%</p>\n        <h3>Overview </h3>\n        <p>{overview}</p>\n        <h4>Genres</h4>\n        <p>{genres.join(', ')}</p>\n      </div>\n    </StyledDetails>\n  );\n}\n","import { getMovieDetails } from 'helpers/api';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport {\n  Link,\n  useParams,\n  useLocation,\n  Outlet,\n  NavLink,\n} from 'react-router-dom';\nimport { ThreeDots, Puff } from 'react-loader-spinner';\n\nimport Details from 'components/movie-details/Details';\nimport styled from '@emotion/styled';\n\nconst GoBackLink = styled(NavLink)`\n  font-size: 20px;\n  all: unset;\n  width: 100px;\n  height: 30px;\n  font-size: 16px;\n  background: transparent;\n  border: none;\n  position: relative;\n  color: #f0f0f0;\n  cursor: pointer;\n  z-index: 1;\n  padding: 10px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  white-space: nowrap;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  transition: all 0.4s;\n  margin-bottom: 20px;\n\n  :hover {\n    color: orange;\n  }\n  :after,\n  :before {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    right: 0;\n    z-index: -99999;\n    transition: all 0.4s;\n  }\n\n  :before {\n    transform: translate(0%, 0%);\n    width: 100%;\n    height: 100%;\n    background: #28282d;\n    border-radius: 10px;\n  }\n\n  :after {\n    transform: translate(10px, 10px);\n    width: 35px;\n    height: 35px;\n    background: #ffffff15;\n    backdrop-filter: blur(5px);\n    -webkit-backdrop-filter: blur(5px);\n    border-radius: 50px;\n  }\n\n  :hover::before {\n    transform: translate(5%, 20%);\n    width: 110%;\n    height: 110%;\n  }\n\n  :hover::after {\n    border-radius: 10px;\n    transform: translate(0, 0);\n    width: 100%;\n    height: 100%;\n  }\n\n  :active::after {\n    transition: 0s;\n    transform: translate(0, 5%);\n  }\n`;\n\nexport default function MovieDetailsPage() {\n  const { movieID } = useParams();\n\n  const [title, setTitle] = useState('');\n  const [image, setImage] = useState('');\n  const [releaseYear, setReleaseYear] = useState();\n  const [score, setScore] = useState();\n  const [overview, setOverview] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [isMovieDataLoading, setIsMovieDataLoading] = useState(false);\n\n  const location = useLocation();\n  const linkToGoBack = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    setIsMovieDataLoading(true);\n    getMovieDetails(movieID)\n      .then(resp => {\n        const result = resp.data;\n        setTitle(result.title);\n        setImage(result.poster_path);\n        setReleaseYear(new Date(result.release_date).getFullYear());\n        setScore(Math.round(result.vote_average * 10));\n        setOverview(result.overview);\n\n        result.genres.map(({ name }) =>\n          setGenres(prevName => [...prevName, name])\n        );\n      })\n      .finally(() => {\n        setIsMovieDataLoading(false);\n      });\n  }, [movieID]);\n\n  return (\n    <>\n      <GoBackLink to={linkToGoBack.current}>Go back</GoBackLink>\n\n      {isMovieDataLoading ? (\n        <Puff\n          height=\"80\"\n          width=\"80\"\n          radius=\"9\"\n          color=\"orange\"\n          ariaLabel=\"three-dots-loading\"\n          wrapperStyle={{}}\n          wrapperClassName=\"\"\n          visible={true}\n        />\n      ) : (\n        <Details\n          title={title}\n          releaseYear={releaseYear}\n          score={score}\n          image={image}\n          overview={overview}\n          genres={genres}\n        />\n      )}\n\n      <hr />\n      <p>Additional information</p>\n      <Link to=\"cast\">Cast</Link>\n      <br />\n      <Link to=\"reviews\">Reviews</Link>\n\n      <Suspense\n        fallback={\n          <ThreeDots\n            height=\"80\"\n            width=\"80\"\n            radius=\"9\"\n            color=\"orange\"\n            ariaLabel=\"three-dots-loading\"\n            wrapperStyle={{}}\n            wrapperClassName=\"\"\n            visible={true}\n          />\n        }\n      >\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n"],"names":["StyledDetails","styled","Details","title","releaseYear","score","image","overview","genres","src","alt","width","height","join","GoBackLink","NavLink","MovieDetailsPage","movieID","useParams","useState","setTitle","setImage","setReleaseYear","setScore","setOverview","setGenres","isMovieDataLoading","setIsMovieDataLoading","location","useLocation","linkToGoBack","useRef","state","from","useEffect","getMovieDetails","then","resp","result","data","poster_path","Date","release_date","getFullYear","Math","round","vote_average","map","name","prevName","finally","to","current","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","Suspense","fallback"],"sourceRoot":""}