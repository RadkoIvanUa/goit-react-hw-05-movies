{"version":3,"file":"static/js/390.f304c1a0.chunk.js","mappings":"6OAIe,SAASA,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAWA,OATAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBN,GACbO,MAAK,SAAAC,GACJC,QAAQC,IAAIF,GACZJ,GAAW,OAAII,EAAKG,KAAKC,MAC1B,IACAC,OAAM,SAAAC,GAAK,OAAIL,QAAQC,IAAII,EAAhB,GACf,GAAE,CAACd,KAGF,+BACE,wBACGG,EAAQY,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,UAAWC,EAAlC,EAAkCA,GAAlC,OACX,0BACGH,GACC,gBACEI,IAAG,yCAAoCJ,GACvCK,IAAI,MAGN,gBACED,IAAI,kCACJC,IAAI,GACJC,MAAM,QACNC,OAAO,WAIX,uBAAIN,KACJ,uBAAIC,MAhBGC,EADE,OAuBpB,C,wMCzCKK,EAAU,mCACVC,EAAW,gCAAjB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,oGACyBC,EAAAA,EAAAA,IAAA,UACbF,EADa,sCACyBD,IAC7CX,OAAM,SAAUC,GACXA,EAAMc,UAICd,EAAMe,QAHfC,EAAAA,GAAAA,MACE,oEAWL,IAjBL,cACQF,EADR,yBAmBSA,GAnBT,2EAsBeG,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BZ,GAA/B,uFACyBQ,EAAAA,EAAAA,IAAA,UACbF,EADa,iBACIN,EADJ,oBACkBK,IACtCX,OAAM,SAAUC,GACXA,EAAMc,UAICd,EAAMe,QAHfC,EAAAA,GAAAA,MACE,oEAWL,IAjBL,cACQF,EADR,yBAmBSA,GAnBT,2EAsBeI,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BC,GAA/B,uFACyBN,EAAAA,EAAAA,IAAA,UACbF,EADa,8BACiBQ,EADjB,oBACkCT,IACtDX,OAAM,SAAUC,GACXA,EAAMc,UAICd,EAAMe,QAHfC,EAAAA,GAAAA,MACE,oEAWL,IAjBL,cACQF,EADR,yBAmBSA,GAnBT,2EAsBetB,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+Ba,GAA/B,uFACyBQ,EAAAA,EAAAA,IAAA,UACbF,EADa,iBACIN,EADJ,4BAC0BK,IAC9CX,OAAM,SAAUC,GACXA,EAAMc,UAICd,EAAMe,QAHfC,EAAAA,GAAAA,MACE,oEAWL,IAjBL,cACQF,EADR,yBAmBSA,GAnBT,2EAsBeM,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+Bf,GAA/B,uFACyBQ,EAAAA,EAAAA,IAAA,UACbF,EADa,iBACIN,EADJ,4BAC0BK,IAC9CX,OAAM,SAAUC,GACXA,EAAMc,UAICd,EAAMe,QAHfC,EAAAA,GAAAA,MACE,oEAWL,IAjBL,cACQF,EADR,yBAmBSA,GAnBT,kE","sources":["components/cast/Cast.jsx","helpers/api.js"],"sourcesContent":["import { getMovieCredits } from 'helpers/api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport default function Cast() {\n  const { movieID } = useParams();\n\n  const [castArr, setCastArr] = useState([]);\n\n  useEffect(() => {\n    getMovieCredits(movieID)\n      .then(resp => {\n        console.log(resp);\n        setCastArr([...resp.data.cast]);\n      })\n      .catch(error => console.log(error));\n  }, [movieID]);\n\n  return (\n    <>\n      <ul>\n        {castArr.map(({ profile_path, name, character, id }) => (\n          <li key={id}>\n            {profile_path ? (\n              <img\n                src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n                alt=\"\"\n              />\n            ) : (\n              <img\n                src=\"https://i.imgur.com/JQ8ngUd.png\"\n                alt=\"\"\n                width=\"200px\"\n                height=\"300px\"\n              />\n            )}\n\n            <p>{name}</p>\n            <p>{character}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst API_KEY = 'db647ca802bc56bfe4b5510b06bf37f2';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nasync function getTrendingMovies() {\n  const response = await axios\n    .get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`)\n    .catch(function (error) {\n      if (error.response) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else if (error.request) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      }\n    });\n\n  return response;\n}\n\nasync function getMovieDetails(id) {\n  const response = await axios\n    .get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`)\n    .catch(function (error) {\n      if (error.response) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else if (error.request) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      }\n    });\n\n  return response;\n}\n\nasync function getSearchMovies(query) {\n  const response = await axios\n    .get(`${BASE_URL}search/movie?query=${query}&api_key=${API_KEY}`)\n    .catch(function (error) {\n      if (error.response) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else if (error.request) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      }\n    });\n\n  return response;\n}\n\nasync function getMovieCredits(id) {\n  const response = await axios\n    .get(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`)\n    .catch(function (error) {\n      if (error.response) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else if (error.request) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      }\n    });\n\n  return response;\n}\n\nasync function getMovieReviews(id) {\n  const response = await axios\n    .get(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`)\n    .catch(function (error) {\n      if (error.response) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else if (error.request) {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      } else {\n        toast.error(\n          'Oops!!!Something went wrong, please reload the page and try again'\n        );\n      }\n    });\n\n  return response;\n}\n\nexport {\n  getTrendingMovies,\n  getMovieDetails,\n  getSearchMovies,\n  getMovieCredits,\n  getMovieReviews,\n};\n"],"names":["Cast","movieID","useParams","useState","castArr","setCastArr","useEffect","getMovieCredits","then","resp","console","log","data","cast","catch","error","map","profile_path","name","character","id","src","alt","width","height","API_KEY","BASE_URL","getTrendingMovies","axios","response","request","toast","getMovieDetails","getSearchMovies","query","getMovieReviews"],"sourceRoot":""}